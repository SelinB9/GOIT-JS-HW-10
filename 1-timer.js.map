{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["\r\nimport flatpickr from \"flatpickr\";\r\nimport \"flatpickr/dist/flatpickr.min.css\";\r\nimport iziToast from \"izitoast\";\r\nimport \"izitoast/dist/css/iziToast.min.css\";\r\n\r\nconst startBtn = document.querySelector('[data-start]');\r\nconst dateTimePicker = document.getElementById('datetime-picker');\r\n\r\nconst daysEl = document.querySelector('[data-days]');\r\nconst hoursEl = document.querySelector('[data-hours]');\r\nconst minutesEl = document.querySelector('[data-minutes]');\r\nconst secondsEl = document.querySelector('[data-seconds]');\r\n\r\nlet timerInterval = null; //bu değişken setInterval tarafından döbdürülecek olan ıd yi saklar başlangıçta null tabi. setInterval() fonksiyonu, bir zamanlayıcı başlatır ve bir ID döndürür.\r\n//clearInterval(timerInterval) satırıyla geri sayım bittiğinde sayacı durduruyoruz. Eğer timerInterval'ı saklamazsak, bu zamanlayıcıyı durduramayız\r\nlet userSelectedDate = null;\r\nstartBtn.disabled = true;\r\n\r\n\r\nconst options = {\r\n    enableTime: true,\r\n    time_24hr: true,\r\n    defaultDate: new Date(),\r\n    minuteIncrement: 1,\r\n  onClose(selectedDates) {\r\n      \r\n    const selectedDate = selectedDates[0];// selectedDate dizisinde tek bir tarih verildiği için [0] yaptık\r\n    const now = new Date();               //! selectedDates Flatpickr tarafından gönderilen tarih dizisidir.\r\n\r\n    if (selectedDate <= now) {\r\n        window.alert(\"Please choose a date in the future\");\r\n        startBtn.disabled = true;\r\n        userSelectedDate = null;\r\n    } else {\r\n        userSelectedDate = selectedDate;\r\n        startBtn.disabled = false;\r\n    }\r\n}\r\n};\r\n    \r\nflatpickr(\"#datetime-picker\", options);\r\n  \r\nfunction convertMs(ms) {\r\n  // Number of milliseconds per unit of time\r\n  const second = 1000;\r\n  const minute = second * 60;\r\n  const hour = minute * 60;\r\n  const day = hour * 24;\r\n\r\n  // Remaining days\r\n  const days = Math.floor(ms / day);\r\n  // Remaining hours\r\n  const hours = Math.floor((ms % day) / hour);\r\n  // Remaining minutes\r\n  const minutes = Math.floor(((ms % day) % hour) / minute);\r\n  // Remaining seconds\r\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\r\n\r\n  return { days, hours, minutes, seconds };\r\n}\r\n\r\nconsole.log(convertMs(2000)); // {days: 0, hours: 0, minutes: 0, seconds: 2}\r\nconsole.log(convertMs(140000)); // {days: 0, hours: 0, minutes: 2, seconds: 20}\r\nconsole.log(convertMs(24140000)); // {days: 0, hours: 6 minutes: 42, seconds: 20}\r\n\r\n\r\n// Gün sayısı 2 veya daha fazla rakam olabilir. Onun dışındakiler 2 basamaklı olmalı.\r\nfunction addLeadingZero(value) {\r\n  return String(value).padStart(2, '0');//padstart metodu 2 karakterden kısa ise başına sıfır ekle demek burda\r\n}\r\n\r\n//şimdi zamanlayıcının görünen kısmını güncelliyelim xx:xx:xx:xx olsun isteniyo ödevde\r\nfunction updateTimerDisplay({ days, hours, minutes, seconds }) { //parametreler convertMs fonksiyonunda gelen geri sayım verissidir.\r\n  daysEl.textContent = days; //günler çift rakam zorunlu değil serbest\r\n  hoursEl.textContent = addLeadingZero(hours);\r\n  minutesEl.textContent = addLeadingZero(minutes);\r\n  secondsEl.textContent = addLeadingZero(seconds);\r\n}\r\n\r\nstartBtn.addEventListener('click', () => {\r\n  if (!userSelectedDate) {\r\n    // Eğer kullanıcı tarih seçmemişse buraya girer\r\n    iziToast.error({\r\n      title: 'Hata',\r\n      message: 'Lütfen önce bir tarih seçin.',\r\n    });\r\n  } else {\r\n    // Geçerli tarih varsa buraya girer\r\n    iziToast.info({\r\n      title: 'The countdown has begun',\r\n      message: `userSelectedDate: ${userSelectedDate.toLocaleString()}`,\r\n    });\r\n\r\n    startBtn.disabled = true; //bu kodu tekrar buraya yazmamızın nedeni start a basıp sayaç başlatıldığında start butonunu devre dışı bırakmak tekrar basılamasın\r\n    dateTimePicker.disabled = true;//yine aynı durum sayaç başladığında yeni bir tarih seçimine izin vermez devredışı;\r\n\r\n    timerInterval = setInterval(() => {\r\n      const now = new Date();//Her saniye, şu anki tarihi ve saati alıyoruz. now değişkeni o anki anlık zamanı temsil eder.\r\n      const diff = userSelectedDate - now;//diff — hedef tarihe kalan süre, milisaniye olarak.\r\n\r\n      if (diff <= 0) {\r\n        clearInterval(timerInterval);\r\n        updateTimerDisplay({ days: 0, hours: 0, minutes: 0, seconds: 0 });\r\n        iziToast.success({\r\n          title: 'time is up!',\r\n          message: 'countdown complete.',\r\n        });\r\n        return;\r\n      }\r\n\r\n      const time = convertMs(diff); //Eğer geri sayım bitmemişse, kalan milisaniyeyi convertMs fonksiyonuna gönderir.convertMs fonksiyonu milisaniyeyi gün, saat, dakika ve saniye olarak parçalara ayırır ve obje olarak döner.\r\n      updateTimerDisplay(time);//her saniye azalışını ekranda göstermek için aslında\r\n    }, 1000);\r\n  }\r\n});\r\n"],"names":["startBtn","dateTimePicker","daysEl","hoursEl","minutesEl","secondsEl","timerInterval","userSelectedDate","options","selectedDates","selectedDate","now","flatpickr","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value","updateTimerDisplay","iziToast","diff","time"],"mappings":"2GAMA,MAAMA,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAiB,SAAS,eAAe,iBAAiB,EAE1DC,EAAS,SAAS,cAAc,aAAa,EAC7CC,EAAU,SAAS,cAAc,cAAc,EAC/CC,EAAY,SAAS,cAAc,gBAAgB,EACnDC,EAAY,SAAS,cAAc,gBAAgB,EAEzD,IAAIC,EAAgB,KAEhBC,EAAmB,KACvBP,EAAS,SAAW,GAGpB,MAAMQ,EAAU,CACZ,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACnB,QAAQC,EAAe,CAErB,MAAMC,EAAeD,EAAc,CAAC,EAC9BE,EAAM,IAAI,KAAO;AAEnBD,GAAgBC,GAChB,OAAO,MAAM,oCAAoC,EACjDX,EAAS,SAAW,GACpBO,EAAmB,OAEnBA,EAAmBG,EACnBV,EAAS,SAAW,GAE5B,CACA,EAEAY,EAAU,mBAAoBJ,CAAO,EAErC,SAASK,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,QAAQ,IAAIL,EAAU,GAAI,CAAC,EAC3B,QAAQ,IAAIA,EAAU,IAAM,CAAC,EAC7B,QAAQ,IAAIA,EAAU,MAAQ,CAAC,EAI/B,SAASM,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAGA,SAASC,EAAmB,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CAC7DhB,EAAO,YAAca,EACrBZ,EAAQ,YAAcgB,EAAeH,CAAK,EAC1CZ,EAAU,YAAce,EAAeF,CAAO,EAC9CZ,EAAU,YAAcc,EAAeD,CAAO,CAChD,CAEAlB,EAAS,iBAAiB,QAAS,IAAM,CAClCO,GAQHe,EAAS,KAAK,CACZ,MAAO,0BACP,QAAS,qBAAqBf,EAAiB,eAAgB,CAAA,EACrE,CAAK,EAEDP,EAAS,SAAW,GACpBC,EAAe,SAAW,GAE1BK,EAAgB,YAAY,IAAM,CAEhC,MAAMiB,EAAOhB,EADD,IAAI,KAGhB,GAAIgB,GAAQ,EAAG,CACb,cAAcjB,CAAa,EAC3Be,EAAmB,CAAE,KAAM,EAAG,MAAO,EAAG,QAAS,EAAG,QAAS,CAAC,CAAE,EAChEC,EAAS,QAAQ,CACf,MAAO,cACP,QAAS,qBACnB,CAAS,EACD,MACD,CAED,MAAME,EAAOX,EAAUU,CAAI,EAC3BF,EAAmBG,CAAI,CACxB,EAAE,GAAI,GA9BPF,EAAS,MAAM,CACb,MAAO,OACP,QAAS,8BACf,CAAK,CA6BL,CAAC"}