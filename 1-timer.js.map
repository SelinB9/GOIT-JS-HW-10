{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["\nimport flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst startBtn = document.querySelector('[data-start]');\nconst dateTimePicker = document.getElementById('datetime-picker');\n\nconst daysEl = document.querySelector('[data-days]');\nconst hoursEl = document.querySelector('[data-hours]');\nconst minutesEl = document.querySelector('[data-minutes]');\nconst secondsEl = document.querySelector('[data-seconds]');\n\nlet timerInterval = null; //bu değişken setInterval tarafından döbdürülecek olan ıd yi saklar başlangıçta null tabi. setInterval() fonksiyonu, bir zamanlayıcı başlatır ve bir ID döndürür.\n//clearInterval(timerInterval) satırıyla geri sayım bittiğinde sayacı durduruyoruz. Eğer timerInterval'ı saklamazsak, bu zamanlayıcıyı durduramayız\nlet userSelectedDate = null;\nstartBtn.disabled = true;\n\n\nconst options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n  onClose(selectedDates) {\n      \n    const selectedDate = selectedDates[0];// selectedDate dizisinde tek bir tarih verildiği için [0] yaptık\n    const now = new Date();               //! selectedDates Flatpickr tarafından gönderilen tarih dizisidir.\n\n    if (selectedDate <= now) {\n      iziToast.info({\n        title: \"Uyarı\",\n        message: \"Please choose a date in the future\"\n      });\n        startBtn.disabled = true;\n        userSelectedDate = null;\n    } else {\n        userSelectedDate = selectedDate;\n        startBtn.disabled = false;\n    }\n}\n};\n    \nflatpickr(\"#datetime-picker\", options);\n  \nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nconsole.log(convertMs(2000)); // {days: 0, hours: 0, minutes: 0, seconds: 2}\nconsole.log(convertMs(140000)); // {days: 0, hours: 0, minutes: 2, seconds: 20}\nconsole.log(convertMs(24140000)); // {days: 0, hours: 6 minutes: 42, seconds: 20}\n\n\n// Gün sayısı 2 veya daha fazla rakam olabilir. Onun dışındakiler 2 basamaklı olmalı.\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');//padstart metodu 2 karakterden kısa ise başına sıfır ekle demek burda\n}\n\n//şimdi zamanlayıcının görünen kısmını güncelliyelim xx:xx:xx:xx olsun isteniyo ödevde\nfunction updateTimerDisplay({ days, hours, minutes, seconds }) { //parametreler convertMs fonksiyonunda gelen geri sayım verissidir.\n  daysEl.textContent = days; //günler çift rakam zorunlu değil serbest\n  hoursEl.textContent = addLeadingZero(hours);\n  minutesEl.textContent = addLeadingZero(minutes);\n  secondsEl.textContent = addLeadingZero(seconds);\n}\n\nstartBtn.addEventListener('click', () => {\n  if (!userSelectedDate) {\n    // Eğer kullanıcı tarih seçmemişse buraya girer\n    iziToast.error({\n      title: 'Hata',\n      message: 'Lütfen önce bir tarih seçin.'\n    });\n  } else {\n    // Geçerli tarih varsa buraya girer\n    iziToast.info({\n      title: 'The countdown has begun',\n      message: `userSelectedDate: ${userSelectedDate.toLocaleString()}`\n    });\n\n    startBtn.disabled = true; //bu kodu tekrar buraya yazmamızın nedeni start a basıp sayaç başlatıldığında start butonunu devre dışı bırakmak tekrar basılamasın\n    dateTimePicker.disabled = true;//yine aynı durum sayaç başladığında yeni bir tarih seçimine izin vermez devredışı;\n\n    timerInterval = setInterval(() => {\n      const now = new Date();//Her saniye, şu anki tarihi ve saati alıyoruz. now değişkeni o anki anlık zamanı temsil eder.\n      const diff = userSelectedDate - now;//diff — hedef tarihe kalan süre, milisaniye olarak.\n\n      if (diff <= 0) {\n        clearInterval(timerInterval);\n        updateTimerDisplay({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n        iziToast.success({\n          title: 'time is up!',\n          message: 'countdown complete.',\n        });\n        return;\n      }\n\n      const time = convertMs(diff); //Eğer geri sayım bitmemişse, kalan milisaniyeyi convertMs fonksiyonuna gönderir.convertMs fonksiyonu milisaniyeyi gün, saat, dakika ve saniye olarak parçalara ayırır ve obje olarak döner.\n      updateTimerDisplay(time);//her saniye azalışını ekranda göstermek için aslında\n    }, 1000);\n  }\n});\n"],"names":["startBtn","dateTimePicker","daysEl","hoursEl","minutesEl","secondsEl","timerInterval","userSelectedDate","options","selectedDates","selectedDate","now","iziToast","flatpickr","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value","updateTimerDisplay","diff","time"],"mappings":"2GAMA,MAAMA,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAiB,SAAS,eAAe,iBAAiB,EAE1DC,EAAS,SAAS,cAAc,aAAa,EAC7CC,EAAU,SAAS,cAAc,cAAc,EAC/CC,EAAY,SAAS,cAAc,gBAAgB,EACnDC,EAAY,SAAS,cAAc,gBAAgB,EAEzD,IAAIC,EAAgB,KAEhBC,EAAmB,KACvBP,EAAS,SAAW,GAGpB,MAAMQ,EAAU,CACZ,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACnB,QAAQC,EAAe,CAErB,MAAMC,EAAeD,EAAc,CAAC,EAC9BE,EAAM,IAAI,KAAO;AAEnBD,GAAgBC,GAClBC,EAAS,KAAK,CACZ,MAAO,QACP,QAAS,oCACjB,CAAO,EACCZ,EAAS,SAAW,GACpBO,EAAmB,OAEnBA,EAAmBG,EACnBV,EAAS,SAAW,GAE5B,CACA,EAEAa,EAAU,mBAAoBL,CAAO,EAErC,SAASM,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,QAAQ,IAAIL,EAAU,GAAI,CAAC,EAC3B,QAAQ,IAAIA,EAAU,IAAM,CAAC,EAC7B,QAAQ,IAAIA,EAAU,MAAQ,CAAC,EAI/B,SAASM,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAGA,SAASC,EAAmB,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CAC7DjB,EAAO,YAAcc,EACrBb,EAAQ,YAAciB,EAAeH,CAAK,EAC1Cb,EAAU,YAAcgB,EAAeF,CAAO,EAC9Cb,EAAU,YAAce,EAAeD,CAAO,CAChD,CAEAnB,EAAS,iBAAiB,QAAS,IAAM,CAClCO,GAQHK,EAAS,KAAK,CACZ,MAAO,0BACP,QAAS,qBAAqBL,EAAiB,eAAgB,CAAA,EACrE,CAAK,EAEDP,EAAS,SAAW,GACpBC,EAAe,SAAW,GAE1BK,EAAgB,YAAY,IAAM,CAEhC,MAAMiB,EAAOhB,EADD,IAAI,KAGhB,GAAIgB,GAAQ,EAAG,CACb,cAAcjB,CAAa,EAC3BgB,EAAmB,CAAE,KAAM,EAAG,MAAO,EAAG,QAAS,EAAG,QAAS,CAAC,CAAE,EAChEV,EAAS,QAAQ,CACf,MAAO,cACP,QAAS,qBACnB,CAAS,EACD,MACD,CAED,MAAMY,EAAOV,EAAUS,CAAI,EAC3BD,EAAmBE,CAAI,CACxB,EAAE,GAAI,GA9BPZ,EAAS,MAAM,CACb,MAAO,OACP,QAAS,8BACf,CAAK,CA6BL,CAAC"}